//
//  HalykWidgetController.swift
//  HalykWidget
//
//  Created by Zhanibek Lukpanov on 25.07.2024.
//

import UIKit
import WebKit
import HalykCore

public class HalykWidgetController: UIViewController {

    private let webView = MessageWebView()
    private let viewModel = HalykWidgetViewModel()

    public init() {
        super.init(nibName: nil, bundle: nil)
    }

    override public func viewDidLoad() {
        super.viewDidLoad()

        view.addSubview(webView)
        setlayoutConstraints()
        stylize()
        setActions()
    }

    private func setlayoutConstraints() {
        webView.makeConstraints { webView in
            return [
                webView.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor),
                webView.leftAnchor.constraint(equalTo: view.leftAnchor),
                webView.rightAnchor.constraint(equalTo: view.rightAnchor),
                webView.bottomAnchor.constraint(equalTo: view.bottomAnchor)
            ]
        }
    }

    private func stylize() {
        view.backgroundColor = .white
        webView.backgroundColor = .clear
    }

    private func setActions() {
        viewModel.delegate = self

        webView.uiDelegate = self
        webView.navigationDelegate = self
        webView.scrollView.delegate = self
        webView.messagingDelegate = self

        viewModel.prepareRequest()
    }

    public required init?(coder: NSCoder) { fatalError("init(coder:) has not been implemented") }
}

extension HalykWidgetController: HalykWidgetViewModelViewDelegate {

    func loadRequest(_ request: URLRequest) {
        webView.load(request)
    }
}

extension HalykWidgetController: UIScrollViewDelegate {

    public func scrollViewWillBeginZooming(_ scrollView: UIScrollView, with view: UIView?) {
        scrollView.pinchGestureRecognizer?.isEnabled = false
    }
}

extension HalykWidgetController: WKUIDelegate, WKNavigationDelegate {

    public func webView(
        _ webView: WKWebView,
        decidePolicyFor navigationAction: WKNavigationAction,
        decisionHandler: @escaping (WKNavigationActionPolicy) -> Void
    ) {
        decisionHandler(.allow)
    }

    public func webView(
        _ webView: WKWebView,
        runJavaScriptAlertPanelWithMessage message: String,
        initiatedByFrame frame: WKFrameInfo,
        completionHandler: @escaping () -> Void
    ) {
        let ac = UIAlertController(title: "Внимание", message: message, preferredStyle: .alert)
        ac.addAction(UIAlertAction(title: "OK", style: .default))
        present(ac, animated: true)
        completionHandler()
    }
}

extension HalykWidgetController: MessagingWebViewDelegate {

    func webView(_ webView: WKWebView, didReceiveAction action: String) {
        let alert = UIAlertController(title: "Message from JavaScript", message: action, preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "OK", style: .default))
        present(alert, animated: true)
    }
}
